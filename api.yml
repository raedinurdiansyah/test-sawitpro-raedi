# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
servers:
  - url: http://localhost
paths:
  /users/:
    get:
      tags:
        - user-profile
      summary: Endpoint to get user profile
      operationId: getUserProfile
      # security:
      #   - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessGetUserProfileResponse"
        '401':
          description: Invalid Token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '403':
          description: user does not have access
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      summary: This is an endpoint to update user data
      operationId: updateUser
      requestBody:
        summary: update user request payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserPayload"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultUpdateResponse"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /register:
    post:
      summary: This is an endpoint to register user
      operationId: registerUser
      requestBody:
        summary: register or create new user request payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterUserPayload"
      responses:
        '200':
          description: Success
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/SuccessRegisterUserResponse"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorWithExtraResponse"
  /login:
    post:
      summary: This is an endpoint to login user
      operationId: loginUser
      requestBody:
        summary: user login request payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginUserPayload"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessLoginUserResponse"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  # securitySchemes:
  #   bearerAuth:            # arbitrary name for the security scheme
  #     type: http
  #     scheme: bearer
  #     bearerFormat: JWT  
  schemas:
    RegisterUserPayload:
      type: object
      required:
        - phone_number
        - full_name
        - password
      properties:
        phone_number:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required,min=10,max=13,phone_number
        full_name:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required,min=3,max=60
        password:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required,min=6,max=64,pwd
    SuccessRegisterUserResponse:
      type: object
      required:
        - GUID
        - message
      properties:
        GUID:
          type: string
          format: uuid
        message:
          type: string
      examples:
        example1:
          GUID: "19b62357-76e3-4cd4-930f-05c7ad712e17"
          message: "string"
    LoginUserPayload:
      type: object
      required:
        - phone_number
        - password
      properties:
        phone_number:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required,min=10,max=13,phone_number
        password:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required,min=6,max=64,pwd
    SuccessLoginUserResponse:
      type: object
      required:
        - token
        - expired_at
      properties:
        token:
          type: string
          minLength: 1
        expired_at:
          type: string
          minLength: 1
    SuccessGetUserProfileResponse:
      type: object
      required:
        - guid
        - full_name
        - phone_number
      properties:
        guid:
          type: string
          format: uuid
          description: User GUID
        full_name:
          type: string
          description: User full name
        phone_number:
          type: string
          description: User phone number
        created_at:
          type: string
          format: date-time
          description: User created at
    UpdateUserPayload:
      type: object
      required:
        - full_name
        - phone_number
      properties:
        phone_number:
          type: string
          nullable: false
          x-oapi-codegen-extra-tags:
            validate: required,min=6,max=64,phone_number
        full_name:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required,min=3,max=60
          nullable: false
    DefaultUpdateResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    ErrorWithExtraResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
        extra:
          type: 
